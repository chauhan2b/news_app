name: Android Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: subosito/flutter-action@v2  
        with:
          flutter-version: '3.22.3'
          channel: 'stable'
      - name: Get dependencies
        run: flutter pub get

      - name: Create Firebase Options
        run: |
          cat << EOF > lib/firebase_options.dart
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart'
              show defaultTargetPlatform, kIsWeb, TargetPlatform;
          
          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              return FirebaseOptions(
                apiKey: '${{ secrets.FIREBASE_API_KEY }}',
                appId: '${{ secrets.FIREBASE_APP_ID }}',
                messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
                projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
                storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              );
            }
          }
          EOF
          
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env
        
      - name: Run code generation
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
